<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CGFCodeGenerator" #>
<#@ import namespace="CGFCodeGenerator.Core" #>
////////////////////////////////////////////////////////////////////
// This file is only auto generated if it doesn't exist. 
// *Modify away!*
////////////////////////////////////////////////////////////////////

//////////////////////////////////
// System Includes

<#
    CGFDocument cgfDocument = CGFDocument;

	foreach(CGFTypeSymbol cgfTypeSymbol in cgfDocument.Types)
	{
		SerializeAttribute typeSerializeAttribute = cgfTypeSymbol.Attributes.GetAttribute<SerializeAttribute>();
		if ((typeSerializeAttribute == null && !cgfTypeSymbol.IsEnum) || (typeSerializeAttribute != null && typeSerializeAttribute.Flags != SerializeFlags.Callback && typeSerializeAttribute.Flags != SerializeFlags.CallbackFullLine))
			continue;
#>
std::istream& operator>>(std::istream& inputStream, <#= cgfTypeSymbol.Name #>& <#= cgfTypeSymbol.VariableName #>)
{


    return inputStream;
}

std::ostream& operator<<(std::ostream& outputStream, const <#= cgfTypeSymbol.Name #>& <#= cgfTypeSymbol.VariableName #>)
{


    return outputStream;
}

//////////////////////////////////
<#
    }
#>